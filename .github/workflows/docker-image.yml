name: Docker Image CI

on:
  push:
    branches: [ "main" ]
   
    
  pull_request:
    branches: [ "main" ]
    
jobs:
  licenses:
    name: Check license
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: '18'
      - run: npm install
      - name: Check licenses
        uses: hearthsim/action-npm-permissive-license-checker@v2
        with:
          production-only: true
          exclude-private-packages: true
      # - name: Use Node.js 16.x
      #   uses: actions/setup-node@v3.8.1
      #   with:
      #     node-version: 16.x
    # - name: Check if package-lock.json is in the specified directory
    #   run: ls "${{ env.GITHUB_WORKSPACE }}"
      # - uses: actions/checkout@v3
      # - run: |
      #     echo ${{ github.workspace }}
      #     echo $GITHUB_WORKSPACE

     
      # - uses: actions/checkout@v3
      #   with:
      #     path: /home/runner/work/pokemon-static/pokemon-static

      # - name: Print the contents of the directory
      #   run: ls ${{ env.GITHUB_WORKSPACE }}
      # - name: License checker
       #   run: | 
       #     npm install -g license-checker
       #     license-checker
      # - name: License compliance check
      #   uses: mikaelvesavuori/license-compliance-action@v1.0.2
      #   with:
      #     allow_licenses: |
      #       MIT
      #       BSD-2-Clause
      #       BSD-3-Clause
      #       ISC
      #       Apache-2.0
      #       CC-BY-4.0
      #       MPL-2.0
      #       Python-2.0
      #     nested_field: "licenseString"
      
      # - uses: actions/checkout@v3

      # Install only production dependencies
      # if you don't care about licenses of devDependencies
      # E.g. GPL license is allowed in devDependencies
      # - run: | 
      #      npm i --frozen-lockfile
      #      ls ${{ env.GITHUB_WORKSPACE }}

      #  #Use main branch or a specific version (e.g. @v0.2.0)
      # - uses: daynin/nodejs-license-checker@v0.2.0
      #   with:
      #     exclude-private-packages: true
      #     allow-only:  |
      #       MIT
      #       BSD-2-Clause
      #       BSD-3-Clause
      #       ISC
      #       Apache-2.0
      #       CC-BY-4.0
      #       MPL-2.0
      #       Python-2.0
      #     paths: "/home/runner/work/pokemon-static/pokemon-static"

  #build:

   # runs-on: ubuntu-latest

    #steps:
    #- uses: actions/checkout@v3
    #- name: Docker login
     # env:
      #  DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
       # DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
      #run: |
       # docker login -u $DOCKER_USERNAME -p $DOCKER_PASSWORD
        
    #- name: Set up Docker Buildx
     # uses: docker/setup-buildx-action@v1
      
    #- name: Get 5 characters of last commit
     # run: echo "IMAGE_TAG=${GITHUB_SHA::5}" >> $GITHUB_ENV
      
    #- name: Extract version from package.json
      #id: extract_version
      #run: echo ::set-output name=version::$(cat package.json | jq -r '.version')

    #- name: Build and push Docker image
     # uses: docker/build-push-action@v2
      #with:
       # context: .
        #push: true
        #tags: angelaranda04/pokemon-static:${{ steps.extract_version.outputs.version }}-${{ env.IMAGE_TAG }}
